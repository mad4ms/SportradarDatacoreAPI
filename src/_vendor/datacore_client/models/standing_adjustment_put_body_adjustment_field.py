from enum import Enum


class StandingAdjustmentPutBodyAdjustmentField(str, Enum):
    BYES = "byes"
    DRAWS = "draws"
    DRAWSAWAY = "drawsAway"
    DRAWSHOME = "drawsHome"
    FORFEITSGIVEN = "forfeitsGiven"
    FORFEITSWONBY = "forfeitsWonBy"
    HIGHESTSCOREAGAINST = "highestScoreAgainst"
    HIGHESTSCOREAGAINSTAWAY = "highestScoreAgainstAway"
    HIGHESTSCOREAGAINSTHOME = "highestScoreAgainstHome"
    HIGHESTSCOREFOR = "highestScoreFor"
    HIGHESTSCOREFORAWAY = "highestScoreForAway"
    HIGHESTSCOREFORHOME = "highestScoreForHome"
    LOSSES = "losses"
    LOSSESAWAY = "lossesAway"
    LOSSESHOME = "lossesHome"
    LOWESTSCOREAGAINST = "lowestScoreAgainst"
    LOWESTSCOREAGAINSTAWAY = "lowestScoreAgainstAway"
    LOWESTSCOREAGAINSTHOME = "lowestScoreAgainstHome"
    LOWESTSCOREFOR = "lowestScoreFor"
    LOWESTSCOREFORAWAY = "lowestScoreForAway"
    LOWESTSCOREFORHOME = "lowestScoreForHome"
    PERCENTAGE = "percentage"
    PERCENTAGEAWAY = "percentageAway"
    PERCENTAGEHOME = "percentageHome"
    PLAYED = "played"
    PLAYEDAWAY = "playedAway"
    PLAYEDHOME = "playedHome"
    POINTDIFFERENCE = "pointDifference"
    POINTDIFFERENCEAWAY = "pointDifferenceAway"
    POINTDIFFERENCEHOME = "pointDifferenceHome"
    POSITION = "position"
    SCOREDAGAINST = "scoredAgainst"
    SCOREDAGAINSTAWAY = "scoredAgainstAway"
    SCOREDAGAINSTHOME = "scoredAgainstHome"
    SCOREDFOR = "scoredFor"
    SCOREDFORAWAY = "scoredForAway"
    SCOREDFORHOME = "scoredForHome"
    STANDINGPOINTS = "standingPoints"
    STANDINGPOINTSAWAY = "standingPointsAway"
    STANDINGPOINTSGIVEN = "standingPointsGiven"
    STANDINGPOINTSHOME = "standingPointsHome"
    STREAK = "streak"
    STREAKAWAY = "streakAway"
    STREAKHOME = "streakHome"
    WASHOUTS = "washouts"
    WINPERCENTAGE = "winPercentage"
    WINPERCENTAGEAWAY = "winPercentageAway"
    WINPERCENTAGEHOME = "winPercentageHome"
    WINS = "wins"
    WINSAWAY = "winsAway"
    WINSHOME = "winsHome"

    def __str__(self) -> str:
        return str(self.value)
